{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GoalInput = function GoalInput(props) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    enteredGoalText = _useState2[0],\n    setEnteredGoalText = _useState2[1];\n  var goalInputHandler = function goalInputHandler(userInput) {\n    setEnteredGoalText(userInput);\n  };\n  var addGoalHandler = function addGoalHandler() {\n    props.onAddGoal(enteredGoalText);\n    setEnteredGoalText(\"\");\n  };\n  return _jsxs(Modal, {\n    visible: props.visible,\n    animationType: \"slide\",\n    children: [_jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(TextInput, {\n        placeholder: \"Your Goal Here!\",\n        style: styles.textInput,\n        onChangeText: goalInputHandler,\n        value: enteredGoalText\n      })\n    }), _jsx(View, {\n      children: _jsx(Button, {\n        title: \"Add Goal!\",\n        onPress: addGoalHandler\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  inputContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 24,\n    marginBottom: 24,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#cccccc\"\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: \"#cccccc\",\n    width: \"70%\",\n    marginRight: 8,\n    padding: 8,\n    borderRadius: 7\n  }\n});\nexport default GoalInput;","map":{"version":3,"names":["React","useState","View","TextInput","StyleSheet","Button","Modal","jsx","_jsx","jsxs","_jsxs","GoalInput","props","_useState","_useState2","_slicedToArray","enteredGoalText","setEnteredGoalText","goalInputHandler","userInput","addGoalHandler","onAddGoal","visible","animationType","children","style","styles","inputContainer","placeholder","textInput","onChangeText","value","title","onPress","create","flex","flexDirection","justifyContent","alignItems","padding","marginBottom","borderBottomWidth","borderBottomColor","borderWidth","borderColor","width","marginRight","borderRadius"],"sources":["/Users/nishantdev/Developer/starting-project/components/GoalInput.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { View, TextInput, StyleSheet, Button, Modal } from \"react-native\";\n\nconst GoalInput = (props) => {\n  const [enteredGoalText, setEnteredGoalText] = useState(\"\");\n  const goalInputHandler = (userInput) => {\n    setEnteredGoalText(userInput);\n  };\n\n  const addGoalHandler = () => {\n    props.onAddGoal(enteredGoalText);\n    setEnteredGoalText(\"\");\n  };\n\n  return (\n    <Modal visible={props.visible} animationType=\"slide\">\n      <View style={styles.inputContainer}>\n        <TextInput\n          placeholder=\"Your Goal Here!\"\n          style={styles.textInput}\n          onChangeText={goalInputHandler}\n          value={enteredGoalText}\n        />\n      </View>\n      <View>\n        <Button title=\"Add Goal!\" onPress={addGoalHandler} />\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 24,\n    marginBottom: 24,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#cccccc\",\n  },\n\n  textInput: {\n    borderWidth: 1,\n    borderColor: \"#cccccc\",\n    width: \"70%\",\n    marginRight: 8,\n    padding: 8,\n    borderRadius: 7,\n  },\n});\n\nexport default GoalInput;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGjC,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIC,KAAK,EAAK;EAC3B,IAAAC,SAAA,GAA8CZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnDG,eAAe,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAC1C,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,SAAS,EAAK;IACtCF,kBAAkB,CAACE,SAAS,CAAC;EAC/B,CAAC;EAED,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BR,KAAK,CAACS,SAAS,CAACL,eAAe,CAAC;IAChCC,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,OACEP,KAAA,CAACJ,KAAK;IAACgB,OAAO,EAAEV,KAAK,CAACU,OAAQ;IAACC,aAAa,EAAC,OAAO;IAAAC,QAAA,GAClDhB,IAAA,CAACN,IAAI;MAACuB,KAAK,EAAEC,MAAM,CAACC,cAAe;MAAAH,QAAA,EACjChB,IAAA,CAACL,SAAS;QACRyB,WAAW,EAAC,iBAAiB;QAC7BH,KAAK,EAAEC,MAAM,CAACG,SAAU;QACxBC,YAAY,EAAEZ,gBAAiB;QAC/Ba,KAAK,EAAEf;MAAgB,CACxB;IAAC,CACE,CAAC,EACPR,IAAA,CAACN,IAAI;MAAAsB,QAAA,EACHhB,IAAA,CAACH,MAAM;QAAC2B,KAAK,EAAC,WAAW;QAACC,OAAO,EAAEb;MAAe,CAAE;IAAC,CACjD,CAAC;EAAA,CACF,CAAC;AAEZ,CAAC;AAED,IAAMM,MAAM,GAAGtB,UAAU,CAAC8B,MAAM,CAAC;EAC/BP,cAAc,EAAE;IACdQ,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE;EACrB,CAAC;EAEDb,SAAS,EAAE;IACTc,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,SAAS;IACtBC,KAAK,EAAE,KAAK;IACZC,WAAW,EAAE,CAAC;IACdP,OAAO,EAAE,CAAC;IACVQ,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAepC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}